[{"name":"app.R","content":"library(shiny)\r\nlibrary(deSolve)\r\nlibrary(ggplot2)\r\nlibrary(plyr)\r\n\r\n\r\nui <- fluidPage(\r\n  titlePanel(\"Theophylline PK Simulation\"),\r\n  sidebarLayout(\r\n    sidebarPanel(\r\n      sliderInput(\"CL\", \"Clearance (CL):\", min = 0.01, max = 0.1, value = 0.04, step = 0.005),\r\n      sliderInput(\"V\", \"Volume of Distribution (V):\", min = 0.1, max = 1, value = 0.47, step = 0.01),\r\n      sliderInput(\"ka\", \"Absorption Rate Constant (ka):\", min = 0.5, max = 3, value = 1.51, step = 0.1),\r\n      sliderInput(\"n\", \"Sample Size:\", min = 10, max = 500, value = 50, step = 10),\r\n      sliderInput(\"dose\", \"Dose (mg):\", min = 50, max = 500, value = 100, step = 50),\r\n      checkboxInput(\"includeIIV\", \"Include Inter-individual Variability (IIV)\", value = TRUE),\r\n      actionButton(\"simulate\", \"Simulate\")\r\n    ),\r\n    mainPanel(\r\n      plotOutput(\"pkPlot\")\r\n    )\r\n  )\r\n)\r\n\r\n\r\nserver <- function(input, output) {\r\n  simulatePK <- eventReactive(input$simulate, {\r\n    # Parameters\r\n    ka <- input$ka\r\n    CL <- input$CL\r\n    V <- input$V\r\n    dose <- input$dose\r\n    \r\n    kel <- CL / V\r\n    \r\n    # Time sequence\r\n    times <- seq(0, 24, by = 0.1)\r\n    \r\n    # Initial conditions\r\n    init <- c(Ad = dose, Ac = 0) # Starting dose in Ad compartment\r\n    \r\n    # Differential equations\r\n    pkModel <- function(time, state, parameters) {\r\n      with(as.list(c(state, parameters)), {\r\n        dAd <- -ka * Ad\r\n        dAc <- ka * Ad - kel * Ac\r\n        list(c(dAd, dAc))\r\n      })\r\n    }\r\n    \r\n    # Fixed effects\r\n    parameters <- c(ka = ka, kel = kel)\r\n    \r\n    # Solve ODE without IIV\r\n    noIIV <- ode(y = init, times = times, func = pkModel, parms = parameters)\r\n    \r\n    if (input$includeIIV) {\r\n      # Include inter-individual variability (IIV)\r\n      omega_CL <- 0.26\r\n      omega_V <- 0.12\r\n      omega_ka <- 0.1\r\n      \r\n      CL_i <- rlnorm(input$n, meanlog = log(CL), sdlog = omega_CL)\r\n      V_i <- rlnorm(input$n, meanlog = log(V), sdlog = omega_V)\r\n      ka_i <- rlnorm(input$n, meanlog = log(ka), sdlog = omega_ka)\r\n      \r\n      profiles <- lapply(1:input$n, function(i) {\r\n        kel_i <- CL_i[i] / V_i[i]\r\n        params_i <- c(ka = ka_i[i], kel = kel_i)\r\n        ode(y = init, times = times, func = pkModel, parms = params_i)\r\n      })\r\n      \r\n      # Calculate median and confidence intervals\r\n      Ac_values <- do.call(cbind, lapply(profiles, function(x) x[, \"Ac\"] / V))\r\n      stats <- data.frame(\r\n        time = times,\r\n        median = apply(Ac_values, 1, median),\r\n        low = apply(Ac_values, 1, quantile, probs = 0.025),\r\n        high = apply(Ac_values, 1, quantile, probs = 0.975)\r\n      )\r\n      \r\n      return(list(noIIV = noIIV, stats = stats))\r\n    }\r\n    \r\n    return(list(noIIV = noIIV))\r\n  })\r\n  \r\n  output$pkPlot <- renderPlot({\r\n    result <- simulatePK()\r\n    times <- result$noIIV[, \"time\"]\r\n    \r\n    plot(result$noIIV[, \"time\"], result$noIIV[, \"Ac\"] / input$V, type = \"l\",\r\n         xlab = \"Time (h)\", ylab = \"Concentration (mg/L)\", col = \"blue\", lwd = 2,\r\n         main = \"Theophylline PK Profiles\")\r\n    legend(\"topright\", legend = c(\"Typical\"), col = c(\"blue\"), lwd = 2)\r\n    \r\n    if (input$includeIIV) {\r\n      stats <- result$stats\r\n      lines(stats$time, stats$median, col = \"red\", lwd = 2)\r\n      polygon(c(stats$time, rev(stats$time)), c(stats$low, rev(stats$high)),\r\n              col = rgb(1, 0, 0, 0.2), border = NA)\r\n      legend(\"topright\", legend = c(\"Typical\", \"Median (IIV)\", \"95% CI (IIV)\"),\r\n             col = c(\"blue\", \"red\", rgb(1, 0, 0, 0.2)), lwd = c(2, 2, NA), pch = c(NA, NA, 15))\r\n    }\r\n  })\r\n}\r\n\r\nshinyApp(ui = ui, server = server)\r\n","type":"text"}]
